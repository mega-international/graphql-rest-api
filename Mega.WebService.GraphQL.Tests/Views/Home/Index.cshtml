@model Mega.WebService.GraphQL.Tests.Models.IndexModel
@{
    ViewBag.Title = "Home Page";
}

<script src="~/Scripts/js/index.js" type="text/javascript"></script>
<div class="jumbotron">
    <h1>Tests selection</h1>
    <div class="row">
        <div class="col-md-7">
            <p class="lead">
                Select a test to run: @Html.DropDownList("SelectTest", Model.TestSelectionList, new { onchange = "OnSelectedTestChanged()" })
                <img id="ImageState" style="cursor: pointer;" src="~/Resources/Images/play.png" height="30" width="30" onclick="OnButtonRunClicked()" />
            </p>
            <div id="TextTestDescription"></div>
        </div>
        <div class="col-md-2">
            @if (Model.HASMode)
            {
                <input id="HASMode" type="hidden" value="1" />
                <div id="LabelSrcBase">API key source:</div>
                <div id="LabelDstBase">API key target:</div>
            }
            else
            {
                <input id="HASMode" type="hidden" value="0" />
                <div>Environment:</div>
                <div id="LabelSrcBase">Repository source:</div>
                <div id="LabelDstBase">Repository target:</div>
                <div>Profile:</div>
            }
            <div>Synchronisation:</div>
        </div>
        <div class="col-md-2">
            @if (Model.HASMode)
            {
                @Html.DropDownList("SelectSrcBase", Model.ApiKeysListSrc)
                @Html.DropDownList("SelectDstBase", Model.ApiKeysListDst)
            }
            else
            {
                @Html.DropDownList("SelectEnv", Model.EnvironmentSelectionList, new { onchange = "OnSelectedEnvChanged()" })
                @Html.DropDownList("SelectSrcBase", Model.RepositorySelectionList)
                @Html.DropDownList("SelectDstBase", Model.RepositorySelectionList)
                @Html.DropDownList("SelectProfile", Model.ProfileSelectionList)
            }

            <select id="SelectSynchronisation">
                <option value="async">Asynchronous</option>
                <option value="sync">Synchronous</option>
            </select>
        </div>
    </div>
</div>
<div class="text-center">
    <h2><span id="TestCurrent"></span> <img id="ImageResult" src="~/Resources/Images/success.png" height="30" width="30" hidden/></h2>
</div>
<div class="row">
    <div class="col-md-4">
        <h2>Test duration</h2>
        <div id="TestMessageDuration"></div>
    </div>
    <div class="col-md-4">
        <h2>Test summary</h2>
        <div id="TestMessageCounts"></div>
    </div>
    <div class="col-md-4">
        <h2>Test details</h2>
        <div id="TestMessageDetails"></div>
    </div>
</div>
